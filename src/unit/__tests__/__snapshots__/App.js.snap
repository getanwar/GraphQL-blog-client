// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should test render component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Navbar
          authUser={false}
          onLogout={[Function]}
/>,
        <div
          className="container"
>
          <Switch>
                    <Route
                              path="/login"
                              render={[Function]}
                    />
                    <Route
                              path="/signup"
                              render={[Function]}
                    />
                    <Route
                              component={[Function]}
                              path="/add-post"
                    />
                    <Route
                              component={[Function]}
                              path="/post/:postId"
                    />
                    <Route
                              component={[Function]}
                              path="/author/:authorId"
                    />
                    <Route
                              component={[Function]}
                              path="/category/:slug"
                    />
                    <Route
                              component={[Function]}
                              path="/"
                    />
          </Switch>
</div>,
        <hr
          className="mt-5"
/>,
        <footer
          className="footer text-center mb-3"
>
          Designed and developed by Anwar Hussain with React, GraphQL, MongoDB & Bootstrap
</footer>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "authUser": false,
          "onLogout": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Switch>
            <Route
                        path="/login"
                        render={[Function]}
            />
            <Route
                        path="/signup"
                        render={[Function]}
            />
            <Route
                        component={[Function]}
                        path="/add-post"
            />
            <Route
                        component={[Function]}
                        path="/post/:postId"
            />
            <Route
                        component={[Function]}
                        path="/author/:authorId"
            />
            <Route
                        component={[Function]}
                        path="/category/:slug"
            />
            <Route
                        component={[Function]}
                        path="/"
            />
</Switch>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                path="/login"
                render={[Function]}
/>,
              <Route
                path="/signup"
                render={[Function]}
/>,
              <Route
                component={[Function]}
                path="/add-post"
/>,
              <Route
                component={[Function]}
                path="/post/:postId"
/>,
              <Route
                component={[Function]}
                path="/author/:authorId"
/>,
              <Route
                component={[Function]}
                path="/category/:slug"
/>,
              <Route
                component={[Function]}
                path="/"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/login",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/signup",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/add-post",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/post/:postId",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/author/:authorId",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/category/:slug",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "mt-5",
        },
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Designed and developed by Anwar Hussain with React, GraphQL, MongoDB & Bootstrap",
          "className": "footer text-center mb-3",
        },
        "ref": null,
        "rendered": "Designed and developed by Anwar Hussain with React, GraphQL, MongoDB & Bootstrap",
        "type": "footer",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Navbar
            authUser={false}
            onLogout={[Function]}
/>,
          <div
            className="container"
>
            <Switch>
                        <Route
                                    path="/login"
                                    render={[Function]}
                        />
                        <Route
                                    path="/signup"
                                    render={[Function]}
                        />
                        <Route
                                    component={[Function]}
                                    path="/add-post"
                        />
                        <Route
                                    component={[Function]}
                                    path="/post/:postId"
                        />
                        <Route
                                    component={[Function]}
                                    path="/author/:authorId"
                        />
                        <Route
                                    component={[Function]}
                                    path="/category/:slug"
                        />
                        <Route
                                    component={[Function]}
                                    path="/"
                        />
            </Switch>
</div>,
          <hr
            className="mt-5"
/>,
          <footer
            className="footer text-center mb-3"
>
            Designed and developed by Anwar Hussain with React, GraphQL, MongoDB & Bootstrap
</footer>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "authUser": false,
            "onLogout": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Switch>
              <Route
                            path="/login"
                            render={[Function]}
              />
              <Route
                            path="/signup"
                            render={[Function]}
              />
              <Route
                            component={[Function]}
                            path="/add-post"
              />
              <Route
                            component={[Function]}
                            path="/post/:postId"
              />
              <Route
                            component={[Function]}
                            path="/author/:authorId"
              />
              <Route
                            component={[Function]}
                            path="/category/:slug"
              />
              <Route
                            component={[Function]}
                            path="/"
              />
</Switch>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  path="/login"
                  render={[Function]}
/>,
                <Route
                  path="/signup"
                  render={[Function]}
/>,
                <Route
                  component={[Function]}
                  path="/add-post"
/>,
                <Route
                  component={[Function]}
                  path="/post/:postId"
/>,
                <Route
                  component={[Function]}
                  path="/author/:authorId"
/>,
                <Route
                  component={[Function]}
                  path="/category/:slug"
/>,
                <Route
                  component={[Function]}
                  path="/"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/signup",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/add-post",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/post/:postId",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/author/:authorId",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/category/:slug",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mt-5",
          },
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Designed and developed by Anwar Hussain with React, GraphQL, MongoDB & Bootstrap",
            "className": "footer text-center mb-3",
          },
          "ref": null,
          "rendered": "Designed and developed by Anwar Hussain with React, GraphQL, MongoDB & Bootstrap",
          "type": "footer",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
